{"version":3,"sources":["components/header.js","components/alerts.js","screens/signIn.js","screens/signUp.js","screens/forgotPassword.js","screens/resetPassword.js","screens/verifyEmail.js","components/bootomBar.js","screens/dashboard.js","components/transactions.js","screens/wallet.js","screens/account.js","screens/qr.js","App.js","switchRouter.js","serviceWorker.js","index.js"],"names":["cookie","Cookie","withRouter","props","useState","signedIn","setSignedIn","useEffect","get","AppBar","style","position","top","fixed","Toolbar","className","display","marginRight","flex","justifyContent","Typography","variant","Button","onClick","fetch","then","res","history","replace","AlertDialog","React","open","setOpen","clicked","updateClicked","handleClose","handleResendLink","a","async","resendEmail","result","console","log","alert","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","discription","DialogActions","resend","Fragment","color","renderLoading","Cookies","SignIn","state","username","password","error","resendPassword","renderButton","CircularProgress","type","onSubmit","handleLogin","size","e","preventDefault","setState","email","method","headers","body","JSON","stringify","json","set","publicKey","login","QRCode","toDataURL","err","url","localStorage","setItem","String","verified","msg","marginTop","this","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","flexDirection","width","marginLeft","required","autoComplete","TextField","onChange","target","value","label","alignItems","padding","fontWeight","push","Component","SignUp","name","onRegister","length","registration","ForgotPassword","handleForgot","ResetPassword","componentDidMount","data","location","search","token","split","handleReset","password2","Verify","verification","pathname","height","fontSize","marginBottom","window","outerWidth","useStyles","makeStyles","root","flexGrow","classes","setValue","routes","0","2","1","Paper","backgroundColor","Tabs","event","newValue","indicatorColor","Tab","icon","Transactions","Date","refresh","fetchTransactions","parse","decide","RenderList","map","List","ListItem","ListItemAvatar","ListItemText","primary","amount","secondary","timestamp","Divider","borderRadius","Wallet","renderQR","maxWidth","src","getItem","showKey","renderPublicKey","showBalance","wordBreak","navigator","clipboard","writeText","isCopied","child","current","balance","credentials","address","receive","createRef","Grid","container","item","sm","xs","ref","Test","handleScan","handleGenerateTxn","tclicked","finalTxn","recipient","receiver","sendername","auth","catch","txn","Send","sclicked","sent","renderSendButton","renderForm","mrginTop","placeholder","renderError","renderReader","delay","onError","handleError","onScan","renderSubmit","renderScan","bottom","right","left","App","exact","path","Qr","theme","createMuiTheme","palette","SwitchRouter","ThemeProvider","VerifyEmail","render","handleAuth","SignUpScreen","CssBaseline","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.afa275bc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport { withRouter } from 'react-router';\r\nimport Cookie from \"universal-cookie\";\r\nlet cookie = new Cookie();\r\nfunction Header(props){\r\n    let [signedIn,setSignedIn] = useState(false);\r\n    useEffect(()=>{\r\n        if(cookie.get('exp_session')){\r\n           setSignedIn(true);\r\n        }\r\n    },[])\r\n    return(\r\n            <AppBar style={{position:'sticky',top:0}} fixed position=\"static\">\r\n                <Toolbar className=\"header\" style={{display:'flex',marginRight:20,flex:1,justifyContent:'space-between'}}>\r\n                    <Typography className=\"head1\" variant=\"h5\">\r\n                        U Coin\r\n                    </Typography>\r\n                    \r\n                    <Typography className=\"head2\" variant=\"h8\" >\r\n                        {signedIn?<Button onClick={()=>fetch('/auth/logout').then(res=>props.history.replace(\"/login\"))} variant=\"contained\">Logout</Button>:<div>Login</div>}\r\n                      \r\n                    </Typography>\r\n                </Toolbar>\r\n             </AppBar>\r\n    )\r\n}\r\nexport default withRouter(Header);","import React,{useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nexport default function AlertDialog(props) {\r\n  const [open, setOpen] = React.useState(props.open);\r\n  const [clicked,updateClicked] = React.useState(false);\r\n  useEffect(()=>{\r\n    setOpen(props.open)\r\n  })\r\n    \r\n  const handleClose = () => {\r\n    if(props.handleClose){\r\n      props.handleClose();\r\n    }\r\n    setOpen(false);\r\n    props.history.replace('/login');\r\n  };\r\n  const handleResendLink = async()=>{\r\n    if(!clicked){\r\n    updateClicked(true)\r\n    let result = await props.resendEmail();\r\n    console.log(result);\r\n    if(result=='sent'){\r\n    updateClicked(false)\r\n    setOpen(false);\r\n    alert('Email Resent!')\r\n    props.handleClose();\r\n    }\r\n    else{\r\n      setOpen(false);\r\n      props.handleClose();\r\n      updateClicked(false);\r\n      alert(result)\r\n    }\r\n\r\n  }\r\n  }\r\n  function renderLoading(){\r\n    if(clicked){\r\n      return <div>Resending...</div>\r\n    }\r\n    \r\n  }\r\n  function renderButtons(){\r\n    if(props.resend){\r\n      return (\r\n        <React.Fragment>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n            Login\r\n          </Button>\r\n          <Button onClick={handleResendLink} color=\"primary\">\r\n            Resend Link?\r\n          </Button>\r\n          </React.Fragment>\r\n      )\r\n    }\r\n    else{\r\n      return (\r\n        <Button onClick={handleClose} color=\"primary\">\r\n            Login\r\n          </Button>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.discription}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {renderButtons()}\r\n          {renderLoading()}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport QRCode from \"qrcode\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Cookies from \"universal-cookie\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nlet cookie = new Cookies();\r\nexport default class SignIn extends React.Component {\r\n     state = {username:null,password:null,clicked:false,error:null,resendPassword:null}\r\n     renderButton =()=>{\r\n      if(this.state.clicked){\r\n          return <center><CircularProgress /></center>\r\n      }\r\n      return (\r\n          <Button type=\"submit\" onSubmit={this.handleLogin} size=\"small\">\r\n              Login\r\n          </Button>\r\n      )\r\n  }\r\n     handleLogin = async(e)=>{\r\n        e.preventDefault();\r\n        this.setState({clicked:true})\r\n        const url = \"/auth/login\";\r\n         const {email,password} = this.state;\r\n        try {\r\n            var res = await fetch(\"/auth/login\",{\r\n                method:'POST',\r\n                headers:{\r\n                   \"Content-Type\":\"application/json\" \r\n                },\r\n              \r\n                body:JSON.stringify({\r\n                    email:email,\r\n                    password:password\r\n                })\r\n            })\r\n            res = await res.json();\r\n            cookie.set('publicKey',res.publicKey);\r\n            if(res.login==\"success\"){ \r\n              QRCode.toDataURL(res.publicKey, (err, url)=>{\r\n                localStorage.setItem('qrcode',String(url));\r\n                localStorage.setItem('publicKey',res.publicKey);\r\n                this.props.history.replace('/',{\r\n                  state:{publicKey:res.publicKey}\r\n                })\r\n              })\r\n                \r\n            }\r\n            else if(res.verified){\r\n\r\n              this.setState({clicked:false,alert:true,discription:res.verified,resendPassword:this.state.password})\r\n            }\r\n            else{\r\n              this.setState({clicked:false,error:res.error})\r\n              console.log(res.error)\r\n            }\r\n          }\r\n        catch(err){\r\n          this.setState({clicked:false,error:'error'})\r\n            console.log(err)\r\n        }\r\n    }\r\n    resend = async()=>{\r\n      let res = await fetch(\"/auth/resendVerification\",{\r\n        method:'POST',\r\n        headers:{\r\n          'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n          email:this.state.email,\r\n          password:this.state.resendPassword\r\n        })\r\n      })\r\n      res  = await res.json();\r\n      if(res.msg){\r\n        return 'sent'\r\n      }\r\n      else{\r\n        return res.error;\r\n      }\r\n    }\r\n    \r\n    // if(login){\r\n    //     return <Dashboard logout={()=>{fetch(\"/auth/logout\")}} publicKey={publicKey} username={username}/>\r\n    // }\r\n    render(){\r\n    return (\r\n        <center >\r\n        <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n          <AlertDialog resendEmail ={this.resend} resend={true} handleClose = {()=>this.setState({alert:false})} history={this.props.history} discription={this.state.discription} open={this.state.alert}/>\r\n          <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  U Coin\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  U Coin is the simplest implementation of blockchain technology\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleLogin} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n              <TextField required onChange = {(e)=>this.setState({email:e.target.value})} type=\"email\" id=\"standard-basic\" label=\"Email\" />\r\n              <TextField required onChange = {(e)=>this.setState({password:e.target.value})} type=\"password\" id=\"standard-basic\" label=\"Password\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              {this.state.error}\r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',padding:8}}>\r\n            \r\n          <span style={{color:'green',fontWeight:'bold'}}>\r\n            Dont Have an Account?\r\n          </span>\r\n          <Button variant=\"contained\" style={{marginTop:10,width:100}} onClick={()=>this.props.history.push(\"/register\")} size=\"small\">\r\n              Sign Up\r\n              </Button>\r\n              </div>\r\n          </Card>\r\n          \r\n      </div>\r\n      <Button onClick={()=>this.props.history.push(\"/forgotPassword\")} style={{marginTop:20}} color=\"primary\" variant='contained'>Forgot Password?</Button>\r\n      </center>\r\n  )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nexport default class SignUp extends React.Component{\r\n    state = {clicked:false,name:null,password:null,email:null,msg:null,alert:false};\r\n    onRegister=async(e)=>{\r\n        e.preventDefault();\r\n        const url = \"/auth/registerUser\";\r\n        const {name,email,password} = this.state;\r\n        if(name && email && password){\r\n            this.setState({clicked:true})\r\n        if(password.length<6){\r\n            this.setState({clicked:false})\r\n            return this.setState({msg:'Password length must be greater than 6'})\r\n        }\r\n        try{\r\n            let res = await fetch(url,{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({email,password,name})\r\n            })\r\n            console.log(res)\r\n            res = await res.json();\r\n            \r\n            if(res.registration!=null){\r\n                this.setState({clicked:false,alert:true,discription:res.registration})\r\n            }\r\n            else{\r\n                console.log(res.error);\r\n                this.setState({clicked:false,msg:res.error})\r\n            }\r\n            console.log(res)\r\n            }\r\n        catch(err){\r\n            console.log('error')\r\n        }\r\n    }\r\n\r\n    }\r\n    \r\n    renderButton =()=>{\r\n        \r\n        if(this.state.clicked){\r\n            return <center><CircularProgress /></center>\r\n        }\r\n        return (\r\n            <Button type=\"sumbit\" onSubmit={this.onRegister} size=\"small\" color=\"primary\">\r\n                Register\r\n            </Button>\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <center >\r\n                <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n                    <Card>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    U Coin\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                                    Registration\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions >\r\n                            <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n                                <form onSubmit={this.onRegister} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n                                    <TextField onChange={(e)=>this.setState({name:e.target.value})} type=\"text\" id=\"standard-basic\" autoComplete=\"off\" required label=\"Name\" />\r\n                                    <TextField onChange={(e)=>this.setState({email:e.target.value})} required  type=\"email\" id=\"standard-basic\" autoComplete=\"off\" label=\"Email\" />\r\n                                    <TextField onChange={(e)=>this.setState({password:e.target.value})} required type=\"password\" id=\"standard-basic\" autoComplete=\"off\" label=\"Password\" />\r\n                                    <this.renderButton />  \r\n                                    <AlertDialog title={'Registered Successfully'} discription={this.state.discription} open={this.state.alert} history={this.props.history} />\r\n                                </form> \r\n                                <center >\r\n                                <div style={{width:200,display:'flex',justifyContent:'center'}}>\r\n                                    <span style={{color:'red',marginTop:5}}>\r\n                                        {this.state.msg}\r\n                                    </span>\r\n                                </div>\r\n                                    </center>\r\n                             \r\n                            </Typography>\r\n                        </CardActions>\r\n                        \r\n                        <CardActions style={{display:'flex',justifyContent:'center',flexDirection:'column'}} >\r\n                        \r\n                            <span style={{color:'green',fontWeight:'bold'}}>\r\n                                Already Have an Account?\r\n                            </span>\r\n                          <Button onClick={()=>this.props.history.replace(\"/login\")} style={{marginTop:10}} size='small' color='primary'>Login</Button> \r\n                        </CardActions>\r\n                    </Card>\r\n        \r\n    </div>\r\n    \r\n    </center>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nexport default class ForgotPassword extends React.Component {\r\n     state = {email:null,clicked:false,alert:false}\r\n     renderButton =()=>{\r\n      if(this.state.clicked){\r\n          return <center><CircularProgress /></center>\r\n      }\r\n      return (\r\n          <Button type=\"sumbit\" onSubmit={this.handleForgot} size=\"small\" color=\"primary\">\r\n              Submit\r\n          </Button>\r\n      )\r\n  }\r\n     handleForgot= async(e)=>{\r\n        e.preventDefault();\r\n        this.setState({clicked:true})\r\n        const url = \"/auth/forgetPassword\";\r\n         const {email} = this.state;\r\n        try {\r\n            var res = await fetch(url,{\r\n                method:'POST',\r\n                headers:{\r\n                   \"Content-Type\":\"application/json\" \r\n                },\r\n              \r\n                body:JSON.stringify({\r\n                    email:email\r\n                })\r\n            })\r\n            res = await res.json();\r\n            console.log(res)\r\n            this.setState({clicked:false,alert:true})\r\n          }\r\n        catch(err){\r\n          this.setState({clicked:false})\r\n            console.log(err)\r\n        }\r\n    }\r\n    \r\n    // if(login){\r\n    //     return <Dashboard logout={()=>{fetch(\"/auth/logout\")}} publicKey={publicKey} username={username}/>\r\n    // }\r\n    render(){\r\n    return (\r\n        <center >\r\n        <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n          <AlertDialog title={'Email sent!'} handleClose = {()=>this.setState({alert:false})} history={this.props.history} discription={'If this email is in our records then you will recieve a link to reset your password via email'} open={this.state.alert}/>\r\n          <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Forgot Password\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Enter the Email associated with your account to get password reset link\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleForgot} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n              <TextField required onChange = {(e)=>this.setState({email:e.target.value})} type=\"email\" id=\"standard-basic\" label=\"Email\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              \r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          </Card>\r\n          \r\n      </div>\r\n       </center>\r\n  )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nexport default class ResetPassword extends React.Component {\r\n    componentDidMount = ()=>{\r\n        let data = this.props.history.location.search;\r\n        let token = String(data.split('?token=')[1]);\r\n        fetch(`/auth/verifyToken?token=${token}`).then(res=>res.json()).then(res=>res.msg?this.setState({token}):this.props.history.replace('/login'))\r\n        \r\n    }\r\n     state = {email:null,clicked:false,alert:false}\r\n     renderButton =()=>{\r\n      if(this.state.clicked){\r\n          return <center><CircularProgress /></center>\r\n      }\r\n      return (\r\n          <Button type=\"sumbit\" onSubmit={this.handleForgot} size=\"small\" color=\"primary\">\r\n              Submit\r\n          </Button>\r\n      )\r\n  }\r\n     handleReset= async(e)=>{\r\n        e.preventDefault();\r\n        if(this.state.password==this.state.password2){\r\n            this.setState({'error':null})\r\n        this.setState({clicked:true})\r\n        const url = \"/auth/resetPassword\";\r\n         const {password,token} = this.state;\r\n        try {\r\n            var res = await fetch(url,{\r\n                method:'POST',\r\n                headers:{\r\n                   \"Content-Type\":\"application/json\" \r\n                },\r\n                body:JSON.stringify({\r\n                    password,token\r\n                })\r\n            })\r\n            res = await res.json();\r\n            console.log(res);\r\n            if(res.msg){\r\n                this.setState({clicked:false,alert:true});\r\n            }   \r\n            else{\r\n                this.setState({clicked:false,error:res.error})\r\n            }\r\n          }\r\n        catch(err){\r\n          this.setState({clicked:false,error:res.error})\r\n            \r\n        }\r\n    }\r\n    else{\r\n        this.setState({error:'Passwords not match'})\r\n    }\r\n    }\r\n    \r\n    // if(login){\r\n    //     return <Dashboard logout={()=>{fetch(\"/auth/logout\")}} publicKey={publicKey} username={username}/>\r\n    // }\r\n    render(){\r\n        if(!this.state.token){\r\n            return <div>Redirecting...</div>\r\n        }\r\n    return (\r\n        <center >\r\n        <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n          <AlertDialog title={'Password Changed!'} handleClose = {()=>this.setState({alert:false})} history={this.props.history} discription={'You can login Now'} open={this.state.alert}/>\r\n          <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Forgot Password\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Type New Password\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleReset} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n              <TextField required onChange = {(e)=>this.setState({password:e.target.value,error:null})} type=\"password\" id=\"standard-basic\" label=\"New Password\" />\r\n              <TextField required onChange = {(e)=>this.setState({password2:e.target.value,error:null})} type=\"password\" id=\"standard-basic\" label=\"Confirm Password\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              {this.state.error}\r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          </Card>\r\n          \r\n      </div>\r\n       </center>\r\n  )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Button from '@material-ui/core/Button'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nexport default class Verify extends React.Component{    \r\n    state = {verification:null};\r\n    componentDidMount = async()=>{\r\n        let data = this.props.location;\r\n        try{\r\n        let res = await fetch(`${data.pathname}${data.search}`);\r\n        res = await res.json();\r\n        console.log(res);\r\n        if(res.verification){\r\n            this.setState({verification:true});\r\n        }\r\n        else{\r\n            this.setState({verification:false});\r\n        }\r\n    }\r\n    catch(err){\r\n        this.setState({verification:'failed'})\r\n    }\r\n    }\r\n    render(){\r\n        if(this.state.verification==true){\r\n            return (\r\n                <div style={{display:'flex',marginTop:200,flex:1,flexDirection:'column',height:'100%',justifyContent:'center',alignItems:\"center\"}}>\r\n                <DoneIcon style={{color:'green',fontSize:40}} />\r\n                <h4 style={{marginBottom:20,marginTop:20}}>\r\n                    Verified Successfully!\r\n                </h4>\r\n                <Button onClick={()=>this.props.history.replace('/login')} variant='contained' color='primary'>Log In!</Button>\r\n            </div>\r\n            )\r\n        }\r\n        if(this.state.verification==false){\r\n            return (\r\n            <div style={{display:'flex',marginTop:200,flex:1,flexDirection:'column',height:'100%',justifyContent:'center',alignItems:\"center\"}}>\r\n                <CancelIcon style={{color:'red',fontSize:40}} />   \r\n                <h4 style={{marginTop:20}}>verification Failed..</h4>\r\n                <Button style={{marginTop:20}} onClick={()=>this.props.history.replace('/login')} variant='contained' color='primary'>Log In!</Button>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div style={{display:'flex',marginTop:200,flex:1,flexDirection:'column',height:'100%',justifyContent:'center',alignItems:\"center\"}}>\r\n                <CircularProgress />\r\n                <h4 style={{marginTop:20}}>Verifying....</h4>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport DashboardIcon  from \"@material-ui/icons/Dashboard\"\r\nimport Account from \"@material-ui/icons/AccountBox\"\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Wallet from \"@material-ui/icons/AccountBalanceWallet\"\r\n\r\nlet variant = 'center'\r\nif(window.outerWidth<500){\r\n    variant='space-between'\r\n}\r\nconst useStyles = makeStyles({\r\n\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n});\r\n\r\nfunction BottomBar(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const routes = {\r\n      0:\"dashboard\",\r\n      2:\"account\",\r\n      1:\"wallet\"\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.history.replace(`/${routes[newValue]}`)\r\n  };\r\n\r\n  return (\r\n    <Paper   className={classes.root} style={{backgroundColor:'black'}}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"Secondary\"\r\n        style={{color:'white'}}\r\n        \r\n      >\r\n        <Tab label=\"Dashboard\" icon={<DashboardIcon />} >\r\n            \r\n        </Tab>\r\n        \r\n        <Tab label=\"Wallet\" icon={<Wallet />}  />\r\n        <Tab label=\"Account\" icon={<Account />}  />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withRouter(BottomBar)","import React,{useState} from \"react\"\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Cookie from \"universal-cookie\";\r\nlet cookie = new Cookie();\r\n  export default class  DashBoard extends React.Component{\r\n    state = {amount:0,password:null,recipient:null,error:null,txn:null,balance:null,verified:false,finalTxn:null}\r\n    componentDidMount = ()=>{\r\n        if(!cookie.get('exp_session')){\r\n            return this.props.history.replace(\"/login\")\r\n        }\r\n        let publicKey  = cookie.get('publicKey');\r\n        this.setState({publicKey,qrcode:localStorage.getItem('qrcode')});\r\n    }\r\n     showBalance = async()=>{\r\n        this.setState({balance:'Loading...'})\r\n        var res = await fetch('/getBalance',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            credentials:'include',\r\n            body:JSON.stringify({\r\n                address:this.state.publicKey\r\n            })\r\n        })\r\n        res = await res.json();\r\n        this.setState({balance:res['Balance']})\r\n        \r\n    }\r\n    renderBalance =()=>{\r\n        if(this.state.balance!=null){\r\n            return (\r\n                <center>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',flex:1}}>\r\n                <h2>\r\n                    Balance \r\n                </h2>\r\n                <h2>\r\n                    ${this.state.balance}\r\n                </h2>\r\n            </div>\r\n            </center>\r\n            )\r\n            }\r\n            if(this.state.balance==\"loading\"){\r\n                return (\r\n                    <div>\r\n                        Loading...\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    \r\n     sendit = async(e)=>{\r\n        \r\n        this.setState({verified:false,txn:null})\r\n        \r\n        e.preventDefault()\r\n        var res = await fetch('/register-broadcast-transactions',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify(this.state.txn)\r\n        })\r\n        res = await res.json();\r\n        if(!res.error) this.setState({finalTxn:res.sent})\r\n        else this.setState({finalTxn:res.error}) \r\n    }\r\n    generate = async (e) =>{\r\n        e.preventDefault();\r\n        this.setState({finalTxn:null});\r\n        var res = await fetch('/generateTxn',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                sender:this.state.publicKey,\r\n                password:this.state.password,\r\n                amount:this.state.amount,\r\n                recipient:this.state.recipient\r\n            })\r\n        })\r\n        res = await res.json();\r\n        console.log(res)\r\n        if(res.auth=='failed'){\r\n            fetch('/auth/logout').then(res=>this.props.history.replace(\"/login\")).catch(err=>null)\r\n        }\r\n        if(!res.error) {\r\n            this.setState({txn:res,verified:true,error:'Your Transaction is Valid'})\r\n        }\r\n        else this.setState({error:res.error})\r\n    }\r\n    renderSendButton =()=>{\r\n        if(this.state.verified){\r\n            return (\r\n                <Button onClick={this.sendit} color='primary'>Send it!</Button>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n    return(\r\n        <center >\r\n    <div style={{display:'flex',justifyContent:'center',marginTop:20,flexDirection:'column',flex:1,padding:10}}>\r\n        \r\n    <div style={{display:'flex',wordBreak:'break-all',margin:5,flexDirection:'column',justifyContent:'center',flex:1}} >\r\n    <img style={{height:150,width:150}} alt = \"tusa\" src={this.state.qrcode}/>\r\n                \r\n                <p >Your Wallet Address is</p>\r\n                <p>\r\n                {this.state.publicKey}\r\n                </p>\r\n                </div>      \r\n            <div style={{display:'flex'}}> \r\n            <Button onClick={this.showBalance}  size=\"small\" color=\"primary\">\r\n            Show Balance\r\n            </Button>\r\n            \r\n            <Button onClick={()=>fetch('/auth/logout').then(res=>this.props.history.replace(\"/login\"))}  size=\"small\" color=\"primary\">\r\n            Logout\r\n            </Button>\r\n            </div>\r\n            {this.renderBalance()}\r\n            <form onSubmit={this.generate} style={{width:200,display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n            <TextField onChange = {(e)=>this.setState({recipient:e.target.value})} type=\"text\" id=\"standard-basic\" label=\"Recevier address\" />\r\n            <TextField onChange = {(e)=>this.setState({amount:e.target.value})} type=\"number\" id=\"standard-basic\" label=\"Amount\" />\r\n            {/* TODO : implementation of auth system\r\n           \r\n           <TextField onChange = {(e)=>updatePassword(password=e.target.value)} type=\"password\" id=\"standard-basic\" label=\"Password\" /> */}\r\n         <TextField onChange = {(e)=>this.setState({password:e.target.value})} type=\"password\" id=\"standard-basic\" label=\"Transaction password\" />\r\n          <Button type='submit' color='primary'>Generate Txn!</Button>\r\n          </form>\r\n          {this.state.error}\r\n          {this.renderSendButton()}\r\n          {this.state.finalTxn}\r\n    </div>\r\n    \r\n    </center>\r\n    )\r\n        }\r\n  }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nvar arr = [1,2]\r\nlet date = new Date();\r\nexport default class  Transactions extends React.Component {\r\n    state = {data:null,refresh:false};\r\n   \r\n    componentDidMount =()=>{\r\n        console.log(this.state.data);\r\n        this.fetchTransactions()\r\n\r\n    }\r\n    fetchTransactions = async()=>{\r\n        try{\r\n             let res =await  fetch(\"/getTransactions\");\r\n             res = await res.json();\r\n             res = JSON.parse(res)\r\n             \r\n             this.setState({data:res})\r\n            \r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    decide =(type)=>{\r\n      if(type=='received'){\r\n          return <ArrowDownwardIcon style={{color:'green'}}/>\r\n      }\r\n      else if(type=='sent'){\r\n      return <ArrowUpwardIcon style={{color:'red'}}/>\r\n      }\r\n      return <LoopIcon />\r\n  }\r\n     RenderList =()=>{\r\n         let data = this.state.data;\r\n         if(!data){\r\n             return <div>Loading...</div>\r\n         }\r\n       if(data.length==0){\r\n           return <center><h4>No Transactions yet..</h4></center>\r\n       }\r\n        \r\n        return data.map(res=>{\r\n            \r\n            return (\r\n                <div className=\"list\">\r\n        <List style={{width:'100%'}}>\r\n                \r\n                    <ListItem >\r\n                        <ListItemAvatar>\r\n                            {this.decide(res.type)}\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <div style={{display:'flex',justifyContent:\"space-between\"}}>\r\n                            <h4>{res.data.name}</h4>\r\n                            <h4>${res.data.amount}</h4>\r\n\r\n                            </div>\r\n                        }\r\n                        secondary={\r\n                            <React.Fragment>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\"\r\n                                style={{display:'inline'}}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {res.data.timestamp}\r\n                            </Typography>\r\n                            </React.Fragment>\r\n                        }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n               </List>\r\n               </div>\r\n            )\r\n        })\r\n    }\r\n    render()\r\n  {\r\n      return (\r\n    <div style={{display:'flex',flexDirection:'column',justifyContent:\"center\"}}>\r\n    <center>\r\n    <h5 style={{marginTop:10,borderRadius:20,backgroundColor:'lightgreen',width:150}}>Transactions:</h5>\r\n    </center>\r\n    \r\n    \r\n        <this.RenderList />\r\n    \r\n    </div>\r\n  );\r\n}\r\n}","import React from \"react\";\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport CallReceivedRoundedIcon from '@material-ui/icons/CallReceivedRounded';\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport Transactions from \"../components/transactions\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nexport default class Wallet extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {balance:'',showKey:'Show Address',renderQR:false,receive:'Receive',color:null,refresh:false};\r\n        this.child = React.createRef()\r\n    }\r\n     renderQR = ()=>{\r\n        \r\n            return(\r\n                <center>\r\n                <h6 style={{backgroundColor:'lightgreen',borderRadius:10,maxWidth:'50%'}}>Ask sender to scan this code </h6>\r\n                <img src={localStorage.getItem('qrcode')} style={{width:150,height:150}} /><br/>\r\n                <Button style={{marginTop:12}} onClick = {()=>this.setState({showKey:this.state.showKey=='Show Address'?'Hide':'Show Address'})} variant=\"contained\" color=\"primary\">{this.state.showKey}</Button>\r\n                {this.renderPublicKey()}\r\n                </center>\r\n            )\r\n        \r\n    }\r\n    componentDidMount = ()=>{\r\n        this.showBalance();\r\n    }\r\n    renderPublicKey = ()=>{\r\n        if(this.state.showKey=='Hide'){\r\n            return (\r\n                <div>\r\n                <div style={{flexDirection:'column',wordBreak:'break-all',display:'flex',marginLeft:10,marginRight:10}}>\r\n                     <h6>{localStorage.getItem('publicKey')}</h6>\r\n\r\n                     <FileCopyIcon onClick={()=>{\r\n                         window.navigator.clipboard.writeText(localStorage.getItem('publicKey'))\r\n                         .then(res=>{\r\n                            this.setState({color:'green',isCopied:'Copied To ClipBoard'})\r\n                         })\r\n                         \r\n                    }} style={{color:this.state.color}} fontSize={\"18\"}/>\r\n                    {this.state.isCopied}\r\n                </div>\r\n                \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    refresh = ()=>{\r\n        this.showBalance();\r\n        this.child.current.fetchTransactions()\r\n    }\r\n    showBalance = async()=>{\r\n        this.setState({balance:'Loading..'})\r\n        let publicKey = localStorage.getItem('publicKey');\r\n        let balance = await fetch('/getBalance',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            credentials:'include',\r\n            body:JSON.stringify({\r\n                address:publicKey\r\n            })\r\n        })\r\n        balance = await balance.json();\r\n        console.log(balance)\r\n        if(balance['auth']=='failed'){\r\n             console.log('failed')\r\n           let res =  await fetch('/auth/logout');\r\n\r\n           this.props.history.replace(\"/login\")\r\n        }\r\n        this.setState({balance:balance['Balance']})\r\n    }\r\n    render(){\r\n        return (\r\n            <Grid container >\r\n        <Grid item sm={6} xs={12}>\r\n                <div style={{width:'100%'}}>\r\n                    \r\n                <div style={{display:'flex',marginTop:20,justifyContent:'space-around',alignItems:'center'}}>\r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                        <div onClick={()=>this.props.history.push(\"/send\")} style={{display:'flex',borderRadius:70,backgroundColor:'#007bff',width:70,height:70,alignItems:'center',justifyContent:'center'}} >\r\n                        <SendRoundedIcon style={{fontSize:50,color:'white'}}/>\r\n                        </div>\r\n                        <h4 style={{marginTop:5}}>Send</h4>\r\n                    </div>\r\n                    <div>\r\n                        <h4>\r\n                            Balance<br/>\r\n                            <center >${this.state.balance}</center>\r\n                        \r\n                        </h4>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div>\r\n                        <center >\r\n                        <Button onClick={this.refresh}  variant=\"contained\" color=\"primary\">Refresh</Button>\r\n                        </center>\r\n                    </div>\r\n                <div style={{marginTop:10}}>\r\n                   \r\n                    {this.renderQR()}\r\n                 \r\n                </div>\r\n                    </div>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                   <div style={{width:'100%'}}>\r\n                      \r\n                       <Transactions ref={this.child}/>\r\n                       \r\n                   </div>\r\n                   </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nexport default class Account extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                This is accout screen\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport QrReader from 'react-qr-reader'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nexport default class Test extends Component {\r\n  state = {\r\n    result: 'No result'\r\n  }\r\n \r\n  handleScan = data => {\r\n    if (data) {\r\n      this.setState({data:data})\r\n      this.setState({clicked:false})\r\n  }\r\n}\r\nhandleGenerateTxn = async(e)=>{\r\n        if(!this.state.tclicked){\r\n        e.preventDefault();\r\n        this.setState({finalTxn:null,tclicked:true,error:null});\r\n        var res = await fetch('/generateTxn',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password:this.state.password,\r\n                amount:this.state.amount,\r\n                recipient:this.state.data,\r\n                receiver:this.state.receiver,\r\n                sendername:this.state.sendername\r\n            })\r\n        })\r\n        res = await res.json();\r\n        console.log(res)\r\n        if(res.auth=='failed'){\r\n            fetch('/auth/logout').then(res=>this.props.history.replace(\"/login\")).catch(err=>null)\r\n        }\r\n        if(!res.error) {\r\n            this.setState({txn:res,verified:true,error:'Transaction Generated!',tclicked:false})\r\n        }\r\n        else this.setState({error:res.error,tclicked:false})\r\n    }\r\n}\r\nSend = async()=>{\r\n    this.setState({error:null,sclicked:true})\r\n    var res = await fetch('/register-broadcast-transactions',{\r\n        method:'POST',\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify(this.state.txn)\r\n    })\r\n        res = await res.json();\r\n        if(!res.error) this.setState({finalTxn:res.sent,txn:null,sclicked:false})\r\n        else this.setState({finalTxn:res.error,txn:null,sclicked:false}) \r\n}\r\nrenderSendButton = ()=>{\r\n    if(this.state.finalTxn){\r\n        return <center><h4>{this.state.finalTxn}</h4></center>\r\n    }\r\n    if(this.state.verified){\r\n        if(this.state.sclicked){\r\n            return <center><CircularProgress /></center>\r\n        }\r\n        return (\r\n            <center>\r\n                <Button onClick={this.Send} variant=\"contained\" color=\"secondary\" >Send!</Button>\r\n            </center>\r\n        )\r\n    }\r\n}\r\nrenderButton = ()=>{\r\n    \r\n    if(this.state.tclicked){\r\n        return <center><CircularProgress /></center>\r\n    }\r\n    return (\r\n        <Button type=\"submit\" onSubmit = {this.handleGenerateTxn}>Generate Txn</Button>\r\n    )\r\n}\r\n\r\nrenderForm = ()=>{\r\n    if(!this.state.data && !this.state.clicked){\r\n        return (\r\n            \r\n            <center>\r\n                <div style={{mrginTop:20}}>\r\n                <h4 style={{marginTop:40}}>Paste the receiver's address below or Scan the QR Code</h4>\r\n                <div style={{marginTop:30,display:'flex',flexDirection:'column',width:'50%',height:150}}>\r\n                <form onSubmit={(e)=>{\r\n                    e.preventDefault();\r\n                    this.setState({data:this.state.recipient})\r\n            }}>\r\n                <TextField onChange={e=>this.setState({recipient:e.target.value})} type='text' placeholder=\"Receiver's address\"/>\r\n                <br/>\r\n                <Button type=\"submit\" onSubmit={(e)=>{\r\n                    e.preventDefault()\r\n                    this.setState({data:this.state.recipient})\r\n            }} style={{marginTop:20,width:100}} variant=\"contained\" color=\"primary\">Submit</Button>\r\n                </form>\r\n                </div>\r\n                </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\nrenderError =()=>{\r\n    return <center><h4 style={{marginTop:10}}>{this.state.error}</h4></center>\r\n}\r\nrenderReader = ()=>{\r\n    if(this.state.clicked){\r\n        return (\r\n            <div style={{display:'flex',height:200,justifyContent:'center',marginTop:30}}>\r\n                <QrReader\r\n          delay={300}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          style={{ width: 300}}\r\n        />\r\n            </div>\r\n         \r\n        )\r\n    }\r\n}\r\nrenderSubmit = ()=>{\r\n    if(this.state.data){\r\n        return (\r\n            <div style={{marginTop:20,display:'flex',justifyContent:\"center\",marginRight:20,marginLeft:20}}>\r\n                <center>\r\n                <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Generate Transaction\r\n              </Typography>\r\n              <Typography style={{wordBreak:\"break-word\"}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  \r\n                 <h5>Reciever</h5>: {this.state.data}\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleGenerateTxn} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n            <TextField required onChange = {(e)=>this.setState({sendername:e.target.value})} type=\"text\" id=\"standard-basic\" label=\"Your name\" />\r\n              <TextField required onChange = {(e)=>this.setState({amount:e.target.value})} type=\"number\" id=\"standard-basic\" label=\"Amount\" />\r\n              <TextField required onChange = {(e)=>this.setState({receiver:e.target.value})} type=\"text\" id=\"standard-basic\" label=\"Receiver's name\" />\r\n              <TextField required onChange = {(e)=>this.setState({password:e.target.value})} type=\"password\" id=\"standard-basic\" label=\"Password\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              \r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          </Card>\r\n          </center>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nrenderScan = ()=>{\r\n    if(!this.state.data){\r\n        return(\r\n        <center>\r\n        <div style={{position:'fixed',bottom:0,marginBottom:100,right:0,left:0}}>\r\n        <Button  style={{marginTop:20}} onClick={()=>this.setState({clicked:this.state.clicked?false:true})} variant=\"contained\" color=\"secondary\" >Scan QR</Button>  \r\n        </div>\r\n        \r\n        </center>\r\n        )\r\n    }\r\n}\r\n  handleError = err => {\r\n    console.error(err)\r\n  }\r\n  render() {\r\n    return (\r\n      <div >\r\n        {this.renderForm()}\r\n        {this.renderScan()}\r\n        {this.renderSubmit()}\r\n        {this.renderError()}\r\n        {this.renderSendButton()}\r\n    \r\n        {this.renderReader()}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport BottomBar from \"./components/bootomBar\";\r\nimport Dashboard from \"./screens/dashboard\";\r\nimport Wallet from \"./screens/wallet\";\r\nimport Account from \"./screens/account\";\r\n\r\nimport Qr from \"./screens/qr\"\r\n\r\nfunction App (){\r\n  \r\n    return (\r\n     \r\n        <React.Fragment>\r\n        {/* <Route path=\"/dashboard\"  component = {Dashboard}/>\r\n        <Route path=\"/account\" component={Account} /> */}\r\n        <Route exact path=\"/send\" component={Qr} />\r\n        <Route exact path=\"/\" component={Wallet}/>\r\n       \r\n        {/* <div className =\"bottomBar\">\r\n          <BottomBar/>\r\n          \r\n         \r\n        </div>\r\n         */}\r\n     </React.Fragment>\r\n    )\r\n}\r\nfunction Test(){\r\n  return (\r\n    <div>\r\n      <h1>\r\n        This is test\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\nexport default App;","import React,{Fragment} from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport {Route,withRouter,Switch} from \"react-router-dom\";\r\nimport Header from \"./components/header\"\r\nimport SignInScreen from \"./screens/signIn\";\r\nimport SignUpScreen from \"./screens/signUp\";\r\nimport ForgotPassword from \"./screens/forgotPassword\";\r\nimport ResetPassword from \"./screens/resetPassword\";\r\nimport VerifyEmail  from \"./screens/verifyEmail\";\r\nimport App from \"./App\"\r\nimport { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nlet cookie = new Cookies();\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n   \r\n      type: 'dark',\r\n      \r\n    },\r\n  });\r\nclass SwitchRouter extends React.Component{\r\n    state = {verification:false};\r\n    componentDidMount =()=>{\r\n        \r\n        if(!cookie.get('exp_session') && this.props.location.pathname!='/resetPassword' && this.props.location.pathname!='/auth/verify'){\r\n          return  this.props.history.replace(\"/login\")\r\n        }\r\n        \r\n        if(cookie.get('exp_session')){\r\n            fetch('/auth/checkAuth').then(res=>res.json()).then(res=>res['auth']=='failed'?this.props.history.replace(\"/login\"):this.props.history.replace(\"/\")).catch(err=>console.log(err));\r\n           \r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <ThemeProvider theme={theme}>\r\n            <Fragment>\r\n                <Header />\r\n                <Switch >\r\n                <Route exact path=\"/auth/verify\" component = {VerifyEmail} />\r\n                <Route exact path=\"/resetPassword\" component={ResetPassword}/>\r\n                <Route exact path=\"/login\" render={(props)=><SignInScreen {...props} handleAuth= {(cookie)=>{}} />} /> \r\n                <Route exact path=\"/register\" component={SignUpScreen} />\r\n                <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\r\n                <App />\r\n                </Switch>\r\n            </Fragment>\r\n            <CssBaseline />\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(SwitchRouter)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport SwitchRouter from './switchRouter';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><SwitchRouter/></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}