{"version":3,"sources":["components/header.js","components/alerts.js","screens/signIn.js","screens/signUp.js","screens/forgotPassword.js","screens/resetPassword.js","screens/verifyEmail.js","components/bootomBar.js","screens/dashboard.js","components/transactions.js","screens/wallet.js","screens/account.js","screens/qr.js","App.js","switchRouter.js","serviceWorker.js","index.js"],"names":["Header","AppBar","style","position","top","fixed","Toolbar","className","display","marginRight","flex","justifyContent","Typography","variant","AlertDialog","props","React","useState","open","setOpen","clicked","updateClicked","useEffect","handleClose","history","replace","handleResendLink","a","resendEmail","result","console","log","alert","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","discription","DialogActions","resend","Fragment","Button","onClick","color","renderLoading","cookie","Cookies","SignIn","state","username","password","error","resendPassword","renderButton","CircularProgress","type","onSubmit","handleLogin","size","e","preventDefault","setState","email","fetch","method","headers","body","JSON","stringify","res","json","set","publicKey","login","QRCode","toDataURL","err","url","localStorage","setItem","String","verified","msg","marginTop","this","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","flexDirection","width","marginLeft","required","autoComplete","TextField","onChange","target","value","label","fontWeight","push","Component","SignUp","name","onRegister","length","registration","ForgotPassword","handleForgot","ResetPassword","componentDidMount","data","location","search","token","split","then","handleReset","password2","Verify","verification","pathname","height","alignItems","fontSize","marginBottom","window","outerWidth","useStyles","makeStyles","root","flexGrow","withRouter","classes","setValue","routes","0","2","1","Paper","backgroundColor","Tabs","event","newValue","indicatorColor","Tab","icon","Cookie","DashBoard","amount","recipient","txn","balance","finalTxn","get","qrcode","getItem","showBalance","credentials","address","renderBalance","sendit","sent","generate","sender","auth","catch","renderSendButton","padding","wordBreak","margin","alt","src","Transactions","Date","refresh","fetchTransactions","decide","RenderList","parse","map","ListItem","ListItemAvatar","ListItemText","primary","secondary","timestamp","Divider","bottom","borderRadius","List","maxWidth","Wallet","renderQR","showKey","renderPublicKey","navigator","clipboard","writeText","isCopied","child","current","receive","createRef","ref","Account","Test","handleScan","handleGenerateTxn","tclicked","receiver","sendername","Send","sclicked","renderForm","mrginTop","placeholder","renderError","renderReader","delay","onError","handleError","onScan","renderSubmit","renderScan","right","left","App","path","Dashboard","Qr","SwitchRouter","exact","VerifyEmail","render","handleAuth","SignUpScreen","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac6e2ef0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nexport default function Header(){\r\n    return(\r\n            <AppBar style={{position:'sticky',top:0}} fixed position=\"static\">\r\n                <Toolbar className=\"header\" style={{display:'flex',marginRight:20,flex:1,justifyContent:'space-between'}}>\r\n                    <Typography className=\"head1\" variant=\"h5\">\r\n                        U Coin\r\n                    </Typography>\r\n                    \r\n                    <Typography className=\"head2\" variant=\"h8\" >\r\n                        Simple BlockChain Based Cryptocurrency\r\n                    </Typography>\r\n                </Toolbar>\r\n             </AppBar>\r\n    )\r\n}","import React,{useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nexport default function AlertDialog(props) {\r\n  const [open, setOpen] = React.useState(props.open);\r\n  const [clicked,updateClicked] = React.useState(false);\r\n  useEffect(()=>{\r\n    setOpen(props.open)\r\n  })\r\n    \r\n  const handleClose = () => {\r\n    if(props.handleClose){\r\n      props.handleClose();\r\n    }\r\n    setOpen(false);\r\n    props.history.replace('/login');\r\n  };\r\n  const handleResendLink = async()=>{\r\n    if(!clicked){\r\n    updateClicked(true)\r\n    let result = await props.resendEmail();\r\n    console.log(result);\r\n    if(result=='sent'){\r\n    updateClicked(false)\r\n    setOpen(false);\r\n    alert('Email Resent!')\r\n    props.handleClose();\r\n    }\r\n    else{\r\n      setOpen(false);\r\n      props.handleClose();\r\n      updateClicked(false);\r\n      alert(result)\r\n    }\r\n\r\n  }\r\n  }\r\n  function renderLoading(){\r\n    if(clicked){\r\n      return <div>Resending...</div>\r\n    }\r\n    \r\n  }\r\n  function renderButtons(){\r\n    if(props.resend){\r\n      return (\r\n        <React.Fragment>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n            Login\r\n          </Button>\r\n          <Button onClick={handleResendLink} color=\"primary\">\r\n            Resend Link?\r\n          </Button>\r\n          </React.Fragment>\r\n      )\r\n    }\r\n    else{\r\n      return (\r\n        <Button onClick={handleClose} color=\"primary\">\r\n            Login\r\n          </Button>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.discription}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {renderButtons()}\r\n          {renderLoading()}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport QRCode from \"qrcode\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Cookies from \"universal-cookie\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nlet cookie = new Cookies();\r\nexport default class SignIn extends React.Component {\r\n     state = {username:null,password:null,clicked:false,error:null,resendPassword:null}\r\n     renderButton =()=>{\r\n      if(this.state.clicked){\r\n          return <center><CircularProgress /></center>\r\n      }\r\n      return (\r\n          <Button type=\"sumbit\" onSubmit={this.handleLogin} size=\"small\" color=\"primary\">\r\n              Login\r\n          </Button>\r\n      )\r\n  }\r\n     handleLogin = async(e)=>{\r\n        e.preventDefault();\r\n        this.setState({clicked:true})\r\n        const url = \"/auth/login\";\r\n         const {email,password} = this.state;\r\n        try {\r\n            var res = await fetch(\"/auth/login\",{\r\n                method:'POST',\r\n                headers:{\r\n                   \"Content-Type\":\"application/json\" \r\n                },\r\n              \r\n                body:JSON.stringify({\r\n                    email:email,\r\n                    password:password\r\n                })\r\n            })\r\n            res = await res.json();\r\n            cookie.set('publicKey',res.publicKey);\r\n            if(res.login==\"success\"){ \r\n              QRCode.toDataURL(res.publicKey, (err, url)=>{\r\n                localStorage.setItem('qrcode',String(url));\r\n                localStorage.setItem('publicKey',res.publicKey);\r\n                this.props.history.replace('/dashboard',{\r\n                  state:{publicKey:res.publicKey}\r\n                })\r\n              })\r\n                \r\n            }\r\n            else if(res.verified){\r\n\r\n              this.setState({clicked:false,alert:true,discription:res.verified,resendPassword:this.state.password})\r\n            }\r\n            else{\r\n              this.setState({clicked:false,error:res.error})\r\n              console.log(res.error)\r\n            }\r\n          }\r\n        catch(err){\r\n          this.setState({clicked:false,error:'error'})\r\n            console.log(err)\r\n        }\r\n    }\r\n    resend = async()=>{\r\n      let res = await fetch(\"/auth/resendVerification\",{\r\n        method:'POST',\r\n        headers:{\r\n          'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n          email:this.state.email,\r\n          password:this.state.resendPassword\r\n        })\r\n      })\r\n      res  = await res.json();\r\n      if(res.msg){\r\n        return 'sent'\r\n      }\r\n      else{\r\n        return res.error;\r\n      }\r\n    }\r\n    \r\n    // if(login){\r\n    //     return <Dashboard logout={()=>{fetch(\"/auth/logout\")}} publicKey={publicKey} username={username}/>\r\n    // }\r\n    render(){\r\n    return (\r\n        <center >\r\n        <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n          <AlertDialog resendEmail ={this.resend} resend={true} handleClose = {()=>this.setState({alert:false})} history={this.props.history} discription={this.state.discription} open={this.state.alert}/>\r\n          <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  U Coin\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  U Coin is the simplest implementation of blockchain technology\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleLogin} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n              <TextField required onChange = {(e)=>this.setState({email:e.target.value})} type=\"email\" id=\"standard-basic\" label=\"Email\" />\r\n              <TextField required onChange = {(e)=>this.setState({password:e.target.value})} type=\"password\" id=\"standard-basic\" label=\"Password\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              {this.state.error}\r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          <div style={{display:'flex',flexDirection:'column',justifyContent:'center'}}>\r\n            \r\n          <span style={{color:'green',fontWeight:'bold'}}>\r\n            Dont Have an Account?\r\n          </span>\r\n          <Button style={{marginTop:10}} onClick={()=>this.props.history.push(\"/register\")} size=\"small\" color=\"primary\">\r\n              Sign Up\r\n              </Button>\r\n              </div>\r\n          </Card>\r\n          \r\n      </div>\r\n      <Button onClick={()=>this.props.history.push(\"/forgotPassword\")} style={{marginTop:20}} color=\"primary\" variant='contained'>Forgot Password?</Button>\r\n      </center>\r\n  )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nexport default class SignUp extends React.Component{\r\n    state = {clicked:false,name:null,password:null,email:null,msg:null,alert:false};\r\n    onRegister=async(e)=>{\r\n        e.preventDefault();\r\n        const url = \"/auth/registerUser\";\r\n        const {name,email,password} = this.state;\r\n        if(name && email && password){\r\n            this.setState({clicked:true})\r\n        if(password.length<6){\r\n            this.setState({clicked:false})\r\n            return this.setState({msg:'Password length must be greater than 6'})\r\n        }\r\n        try{\r\n            let res = await fetch(url,{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({email,password,name})\r\n            })\r\n            console.log(res)\r\n            res = await res.json();\r\n            \r\n            if(res.registration!=null){\r\n                this.setState({clicked:false,alert:true,discription:res.registration})\r\n            }\r\n            else{\r\n                console.log(res.error);\r\n                this.setState({clicked:false,msg:res.error})\r\n            }\r\n            console.log(res)\r\n            }\r\n        catch(err){\r\n            console.log('error')\r\n        }\r\n    }\r\n\r\n    }\r\n    \r\n    renderButton =()=>{\r\n        \r\n        if(this.state.clicked){\r\n            return <center><CircularProgress /></center>\r\n        }\r\n        return (\r\n            <Button type=\"sumbit\" onSubmit={this.onRegister} size=\"small\" color=\"primary\">\r\n                Register\r\n            </Button>\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <center >\r\n                <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n                    <Card>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    U Coin\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                                    Registration\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions >\r\n                            <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n                                <form onSubmit={this.onRegister} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n                                    <TextField onChange={(e)=>this.setState({name:e.target.value})} type=\"text\" id=\"standard-basic\" autoComplete=\"off\" required label=\"Name\" />\r\n                                    <TextField onChange={(e)=>this.setState({email:e.target.value})} required  type=\"email\" id=\"standard-basic\" autoComplete=\"off\" label=\"Email\" />\r\n                                    <TextField onChange={(e)=>this.setState({password:e.target.value})} required type=\"password\" id=\"standard-basic\" autoComplete=\"off\" label=\"Password\" />\r\n                                    <this.renderButton />  \r\n                                    <AlertDialog title={'Registered Successfully'} discription={this.state.discription} open={this.state.alert} history={this.props.history} />\r\n                                </form> \r\n                                <center >\r\n                                <div style={{width:200,display:'flex',justifyContent:'center'}}>\r\n                                    <span style={{color:'red',marginTop:5}}>\r\n                                        {this.state.msg}\r\n                                    </span>\r\n                                </div>\r\n                                    </center>\r\n                             \r\n                            </Typography>\r\n                        </CardActions>\r\n                        \r\n                        <CardActions style={{display:'flex',justifyContent:'center',flexDirection:'column'}} >\r\n                        \r\n                            <span style={{color:'green',fontWeight:'bold'}}>\r\n                                Already Have an Account?\r\n                            </span>\r\n                          <Button onClick={()=>this.props.history.replace(\"/login\")} style={{marginTop:10}} size='small' color='primary'>Login</Button> \r\n                        </CardActions>\r\n                    </Card>\r\n        \r\n    </div>\r\n    \r\n    </center>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nexport default class ForgotPassword extends React.Component {\r\n     state = {email:null,clicked:false,alert:false}\r\n     renderButton =()=>{\r\n      if(this.state.clicked){\r\n          return <center><CircularProgress /></center>\r\n      }\r\n      return (\r\n          <Button type=\"sumbit\" onSubmit={this.handleForgot} size=\"small\" color=\"primary\">\r\n              Submit\r\n          </Button>\r\n      )\r\n  }\r\n     handleForgot= async(e)=>{\r\n        e.preventDefault();\r\n        this.setState({clicked:true})\r\n        const url = \"/auth/forgetPassword\";\r\n         const {email} = this.state;\r\n        try {\r\n            var res = await fetch(url,{\r\n                method:'POST',\r\n                headers:{\r\n                   \"Content-Type\":\"application/json\" \r\n                },\r\n              \r\n                body:JSON.stringify({\r\n                    email:email\r\n                })\r\n            })\r\n            res = await res.json();\r\n            console.log(res)\r\n            this.setState({clicked:false,alert:true})\r\n          }\r\n        catch(err){\r\n          this.setState({clicked:false})\r\n            console.log(err)\r\n        }\r\n    }\r\n    \r\n    // if(login){\r\n    //     return <Dashboard logout={()=>{fetch(\"/auth/logout\")}} publicKey={publicKey} username={username}/>\r\n    // }\r\n    render(){\r\n    return (\r\n        <center >\r\n        <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n          <AlertDialog title={'Email sent!'} handleClose = {()=>this.setState({alert:false})} history={this.props.history} discription={'If this email is in our records then you will recieve a link to reset your password via email'} open={this.state.alert}/>\r\n          <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Forgot Password\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Enter the Email associated with your account to get password reset link\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleForgot} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n              <TextField required onChange = {(e)=>this.setState({email:e.target.value})} type=\"email\" id=\"standard-basic\" label=\"Email\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              \r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          </Card>\r\n          \r\n      </div>\r\n       </center>\r\n  )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"../components/alerts\";\r\nexport default class ResetPassword extends React.Component {\r\n    componentDidMount = ()=>{\r\n        let data = this.props.history.location.search;\r\n        let token = String(data.split('?token=')[1]);\r\n        fetch(`/auth/verifyToken?token=${token}`).then(res=>res.json()).then(res=>res.msg?this.setState({token}):this.props.history.replace('/login'))\r\n        \r\n    }\r\n     state = {email:null,clicked:false,alert:false}\r\n     renderButton =()=>{\r\n      if(this.state.clicked){\r\n          return <center><CircularProgress /></center>\r\n      }\r\n      return (\r\n          <Button type=\"sumbit\" onSubmit={this.handleForgot} size=\"small\" color=\"primary\">\r\n              Submit\r\n          </Button>\r\n      )\r\n  }\r\n     handleReset= async(e)=>{\r\n        e.preventDefault();\r\n        if(this.state.password==this.state.password2){\r\n            this.setState({'error':null})\r\n        this.setState({clicked:true})\r\n        const url = \"/auth/resetPassword\";\r\n         const {password,token} = this.state;\r\n        try {\r\n            var res = await fetch(url,{\r\n                method:'POST',\r\n                headers:{\r\n                   \"Content-Type\":\"application/json\" \r\n                },\r\n                body:JSON.stringify({\r\n                    password,token\r\n                })\r\n            })\r\n            res = await res.json();\r\n            console.log(res);\r\n            if(res.msg){\r\n                this.setState({clicked:false,alert:true});\r\n            }   \r\n            else{\r\n                this.setState({clicked:false,error:res.error})\r\n            }\r\n          }\r\n        catch(err){\r\n          this.setState({clicked:false,error:res.error})\r\n            \r\n        }\r\n    }\r\n    else{\r\n        this.setState({error:'Passwords not match'})\r\n    }\r\n    }\r\n    \r\n    // if(login){\r\n    //     return <Dashboard logout={()=>{fetch(\"/auth/logout\")}} publicKey={publicKey} username={username}/>\r\n    // }\r\n    render(){\r\n        if(!this.state.token){\r\n            return <div>Redirecting...</div>\r\n        }\r\n    return (\r\n        <center >\r\n        <div style={{display:'flex',justifyContent:'center',marginTop:10}}>\r\n          <AlertDialog title={'Password Changed!'} handleClose = {()=>this.setState({alert:false})} history={this.props.history} discription={'You can login Now'} open={this.state.alert}/>\r\n          <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Forgot Password\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Type New Password\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleReset} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n              <TextField required onChange = {(e)=>this.setState({password:e.target.value,error:null})} type=\"password\" id=\"standard-basic\" label=\"New Password\" />\r\n              <TextField required onChange = {(e)=>this.setState({password2:e.target.value,error:null})} type=\"password\" id=\"standard-basic\" label=\"Confirm Password\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              {this.state.error}\r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          </Card>\r\n          \r\n      </div>\r\n       </center>\r\n  )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Button from '@material-ui/core/Button'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nexport default class Verify extends React.Component{    \r\n    state = {verification:null};\r\n    componentDidMount = async()=>{\r\n        let data = this.props.location;\r\n        try{\r\n        let res = await fetch(`${data.pathname}${data.search}`);\r\n        res = await res.json();\r\n        console.log(res);\r\n        if(res.verification){\r\n            this.setState({verification:true});\r\n        }\r\n        else{\r\n            this.setState({verification:false});\r\n        }\r\n    }\r\n    catch(err){\r\n        this.setState({verification:'failed'})\r\n    }\r\n    }\r\n    render(){\r\n        if(this.state.verification==true){\r\n            return (\r\n                <div style={{display:'flex',marginTop:200,flex:1,flexDirection:'column',height:'100%',justifyContent:'center',alignItems:\"center\"}}>\r\n                <DoneIcon style={{color:'green',fontSize:40}} />\r\n                <h4 style={{marginBottom:20,marginTop:20}}>\r\n                    Verified Successfully!\r\n                </h4>\r\n                <Button onClick={()=>this.props.history.replace('/login')} variant='contained' color='primary'>Log In!</Button>\r\n            </div>\r\n            )\r\n        }\r\n        if(this.state.verification==false){\r\n            return (\r\n            <div style={{display:'flex',marginTop:200,flex:1,flexDirection:'column',height:'100%',justifyContent:'center',alignItems:\"center\"}}>\r\n                <CancelIcon style={{color:'red',fontSize:40}} />   \r\n                <h4 style={{marginTop:20}}>verification Failed..</h4>\r\n                <Button style={{marginTop:20}} onClick={()=>this.props.history.replace('/login')} variant='contained' color='primary'>Log In!</Button>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div style={{display:'flex',marginTop:200,flex:1,flexDirection:'column',height:'100%',justifyContent:'center',alignItems:\"center\"}}>\r\n                <CircularProgress />\r\n                <h4 style={{marginTop:20}}>Verifying....</h4>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport DashboardIcon  from \"@material-ui/icons/Dashboard\"\r\nimport Account from \"@material-ui/icons/AccountBox\"\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Wallet from \"@material-ui/icons/AccountBalanceWallet\"\r\n\r\nlet variant = 'center'\r\nif(window.outerWidth<500){\r\n    variant='space-between'\r\n}\r\nconst useStyles = makeStyles({\r\n\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n});\r\n\r\nfunction BottomBar(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const routes = {\r\n      0:\"dashboard\",\r\n      2:\"account\",\r\n      1:\"wallet\"\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.history.replace(`/${routes[newValue]}`)\r\n  };\r\n\r\n  return (\r\n    <Paper   className={classes.root} style={{backgroundColor:'black'}}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"Secondary\"\r\n        style={{color:'white'}}\r\n        \r\n      >\r\n        <Tab label=\"Dashboard\" icon={<DashboardIcon />} >\r\n            \r\n        </Tab>\r\n        \r\n        <Tab label=\"Wallet\" icon={<Wallet />}  />\r\n        <Tab label=\"Account\" icon={<Account />}  />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withRouter(BottomBar)","import React,{useState} from \"react\"\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Cookie from \"universal-cookie\";\r\nlet cookie = new Cookie();\r\n  export default class  DashBoard extends React.Component{\r\n    state = {amount:0,password:null,recipient:null,error:null,txn:null,balance:null,verified:false,finalTxn:null}\r\n    componentDidMount = ()=>{\r\n        if(!cookie.get('exp_session')){\r\n            return this.props.history.replace(\"/login\")\r\n        }\r\n        let publicKey  = cookie.get('publicKey');\r\n        this.setState({publicKey,qrcode:localStorage.getItem('qrcode')});\r\n    }\r\n     showBalance = async()=>{\r\n        this.setState({balance:'Loading...'})\r\n        var res = await fetch('/getBalance',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            credentials:'include',\r\n            body:JSON.stringify({\r\n                address:this.state.publicKey\r\n            })\r\n        })\r\n        res = await res.json();\r\n        this.setState({balance:res['Balance']})\r\n        \r\n    }\r\n    renderBalance =()=>{\r\n        if(this.state.balance!=null){\r\n            return (\r\n                <center>\r\n            <div style={{display:'flex',flexDirection:'column',justifyContent:'center',flex:1}}>\r\n                <h2>\r\n                    Balance \r\n                </h2>\r\n                <h2>\r\n                    ${this.state.balance}\r\n                </h2>\r\n            </div>\r\n            </center>\r\n            )\r\n            }\r\n            if(this.state.balance==\"loading\"){\r\n                return (\r\n                    <div>\r\n                        Loading...\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    \r\n     sendit = async(e)=>{\r\n        \r\n        this.setState({verified:false,txn:null})\r\n        \r\n        e.preventDefault()\r\n        var res = await fetch('/register-broadcast-transactions',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify(this.state.txn)\r\n        })\r\n        res = await res.json();\r\n        if(!res.error) this.setState({finalTxn:res.sent})\r\n        else this.setState({finalTxn:res.error}) \r\n    }\r\n    generate = async (e) =>{\r\n        e.preventDefault();\r\n        this.setState({finalTxn:null});\r\n        var res = await fetch('/generateTxn',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                sender:this.state.publicKey,\r\n                password:this.state.password,\r\n                amount:this.state.amount,\r\n                recipient:this.state.recipient\r\n            })\r\n        })\r\n        res = await res.json();\r\n        console.log(res)\r\n        if(res.auth=='failed'){\r\n            fetch('/auth/logout').then(res=>this.props.history.replace(\"/login\")).catch(err=>null)\r\n        }\r\n        if(!res.error) {\r\n            this.setState({txn:res,verified:true,error:'Your Transaction is Valid'})\r\n        }\r\n        else this.setState({error:res.error})\r\n    }\r\n    renderSendButton =()=>{\r\n        if(this.state.verified){\r\n            return (\r\n                <Button onClick={this.sendit} color='primary'>Send it!</Button>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n    return(\r\n        <center >\r\n    <div style={{display:'flex',justifyContent:'center',marginTop:20,flexDirection:'column',flex:1,padding:10}}>\r\n        \r\n    <div style={{display:'flex',wordBreak:'break-all',margin:5,flexDirection:'column',justifyContent:'center',flex:1}} >\r\n    <img style={{height:150,width:150}} alt = \"tusa\" src={this.state.qrcode}/>\r\n                \r\n                <p >Your Wallet Address is</p>\r\n                <p>\r\n                {this.state.publicKey}\r\n                </p>\r\n                </div>      \r\n            <div style={{display:'flex'}}> \r\n            <Button onClick={this.showBalance}  size=\"small\" color=\"primary\">\r\n            Show Balance\r\n            </Button>\r\n            \r\n            <Button onClick={()=>fetch('/auth/logout').then(res=>this.props.history.replace(\"/login\"))}  size=\"small\" color=\"primary\">\r\n            Logout\r\n            </Button>\r\n            </div>\r\n            {this.renderBalance()}\r\n            <form onSubmit={this.generate} style={{width:200,display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n            <TextField onChange = {(e)=>this.setState({recipient:e.target.value})} type=\"text\" id=\"standard-basic\" label=\"Recevier address\" />\r\n            <TextField onChange = {(e)=>this.setState({amount:e.target.value})} type=\"number\" id=\"standard-basic\" label=\"Amount\" />\r\n            {/* TODO : implementation of auth system\r\n           \r\n           <TextField onChange = {(e)=>updatePassword(password=e.target.value)} type=\"password\" id=\"standard-basic\" label=\"Password\" /> */}\r\n         <TextField onChange = {(e)=>this.setState({password:e.target.value})} type=\"password\" id=\"standard-basic\" label=\"Transaction password\" />\r\n          <Button type='submit' color='primary'>Generate Txn!</Button>\r\n          </form>\r\n          {this.state.error}\r\n          {this.renderSendButton()}\r\n          {this.state.finalTxn}\r\n    </div>\r\n    \r\n    </center>\r\n    )\r\n        }\r\n  }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nvar arr = [1,2]\r\nlet date = new Date();\r\nexport default class  Transactions extends React.Component {\r\n    state = {data:null,refresh:false};\r\n   \r\n    componentDidMount =()=>{\r\n        console.log(this.state.data);\r\n        this.fetchTransactions()\r\n\r\n    }\r\n    fetchTransactions = async()=>{\r\n        try{\r\n             let res =await  fetch(\"/getTransactions\");\r\n             res = await res.json();\r\n             console.log(res)\r\n             this.setState({data:res})\r\n             \r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    decide =(type)=>{\r\n      if(type=='received'){\r\n          return <ArrowDownwardIcon style={{color:'green'}}/>\r\n      }\r\n      else if(type=='sent'){\r\n      return <ArrowUpwardIcon style={{color:'red'}}/>\r\n      }\r\n      return <LoopIcon />\r\n  }\r\n     RenderList =()=>{\r\n         let data = this.state.data;\r\n         if(!data){\r\n             return <div>Loading...</div>\r\n         }\r\n         data = JSON.parse(data)\r\n        return data.map(res=>{\r\n            return (\r\n                <React.Fragment>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            {this.decide(res.type)}\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={\r\n                                <div style={{display:'flex',justifyContent:\"space-between\"}}>\r\n                            <h4>{res.data.name}</h4>\r\n                            <h4>${res.data.amount}</h4>\r\n\r\n                            </div>\r\n                        }\r\n                        secondary={\r\n                            <React.Fragment>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\"\r\n                                style={{display:'inline'}}\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                {res.data.timestamp}\r\n                            </Typography>\r\n                            </React.Fragment>\r\n                        }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n    render()\r\n  {\r\n      return (\r\n    <div style={{position:'sticky',bottom:72,display:'flex',flexDirection:'column',justifyContent:\"center\",height:400,marginBottom:40}}>\r\n    <center>\r\n    <h5 style={{marginTop:10,borderRadius:20,backgroundColor:'lightgreen',width:150}}>Transactions:</h5>\r\n    </center>\r\n    <div className=\"list\">\r\n        <List style={{width:'100%',maxWidth:360}}>\r\n        <this.RenderList />\r\n        </List>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n}","import React from \"react\";\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport CallReceivedRoundedIcon from '@material-ui/icons/CallReceivedRounded';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Transactions from \"../components/transactions\";\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nexport default class Wallet extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {balance:'',showKey:'Show Address',renderQR:false,receive:'Receive',color:null,refresh:false};\r\n        this.child = React.createRef()\r\n    }\r\n     renderQR = ()=>{\r\n        if(this.state.renderQR){\r\n            return(\r\n                <center>\r\n                <h6 style={{backgroundColor:'lightgreen',borderRadius:10,maxWidth:'50%'}}>Ask sender to scan this code </h6>\r\n                <img src={localStorage.getItem('qrcode')} style={{width:150,height:150}} /><br/>\r\n                <Button onClick = {()=>this.setState({showKey:this.state.showKey=='Show Address'?'Hide':'Show Address'})} variant=\"contained\" color=\"primary\">{this.state.showKey}</Button>\r\n                {this.renderPublicKey()}\r\n                </center>\r\n            )\r\n        }\r\n    }\r\n    componentDidMount = ()=>{\r\n        this.showBalance();\r\n    }\r\n    renderPublicKey = ()=>{\r\n        if(this.state.showKey=='Hide'){\r\n            return (\r\n                <div>\r\n                <div style={{flexDirection:'column',wordBreak:'break-all',display:'flex',marginLeft:10,marginRight:10}}>\r\n                     <h6>{localStorage.getItem('publicKey')}</h6>\r\n\r\n                     <FileCopyIcon onClick={()=>{\r\n                         window.navigator.clipboard.writeText(localStorage.getItem('publicKey'))\r\n                         .then(res=>{\r\n                            this.setState({color:'green',isCopied:'Copied To ClipBoard'})\r\n                         })\r\n                         \r\n                    }} style={{color:this.state.color}} fontSize={\"18\"}/>\r\n                    {this.state.isCopied}\r\n                </div>\r\n                \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    refresh = ()=>{\r\n        this.showBalance();\r\n        this.child.current.fetchTransactions()\r\n    }\r\n    showBalance = async()=>{\r\n        this.setState({balance:'Loading..'})\r\n        let publicKey = localStorage.getItem('publicKey');\r\n        let balance = await fetch('/getBalance',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            credentials:'include',\r\n            body:JSON.stringify({\r\n                address:publicKey\r\n            })\r\n        })\r\n        balance = await balance.json();\r\n        console.log(balance)\r\n        if(balance['auth']=='failed'){\r\n             console.log('failed')\r\n           let res =  await fetch('/auth/logout');\r\n\r\n           this.props.history.replace(\"/login\")\r\n        }\r\n        this.setState({balance:balance['Balance']})\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div style={{display:'flex',width:'100%',marginTop:20,justifyContent:'space-around',alignItems:'center'}}>\r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                        <div onClick={()=>this.props.history.push(\"/send\")} style={{display:'flex',borderRadius:70,backgroundColor:'#007bff',width:70,height:70,alignItems:'center',justifyContent:'center'}} >\r\n                        <SendRoundedIcon style={{fontSize:50,color:'white'}}/>\r\n                        </div>\r\n                        <h4 style={{marginTop:5}}>Send</h4>\r\n                    </div>\r\n                    <div>\r\n                        <h4>\r\n                            Balance<br/>\r\n                            <center >${this.state.balance}</center>\r\n                        \r\n                        </h4>\r\n                    </div>\r\n                    <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                        <div onClick={()=>this.setState({renderQR:this.state.renderQR?false:true,receive:this.state.receive=='Receive'?'hide':'Receive'})} style={{display:'flex',borderRadius:70,backgroundColor:'#007bff',width:70,height:70,alignItems:'center',justifyContent:'center'}} >\r\n                        <CallReceivedRoundedIcon style={{fontSize:50,color:'white'}}/>\r\n                        </div>\r\n                        <h4 style={{marginTop:5}}>{this.state.receive}</h4>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div>\r\n                        <center >\r\n                        <Button onClick={this.refresh}  variant=\"contained\" color=\"primary\">Refresh</Button>\r\n                        </center>\r\n                    </div>\r\n                <div style={{marginTop:10}}>\r\n                   \r\n                    {this.renderQR()}\r\n                 \r\n                </div>\r\n                    \r\n                   <div>\r\n                       <center>\r\n                        \r\n                       \r\n                       </center>\r\n                       <Transactions ref={this.child}/>\r\n                       \r\n                   </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nexport default class Account extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                This is accout screen\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport QrReader from 'react-qr-reader'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nexport default class Test extends Component {\r\n  state = {\r\n    result: 'No result'\r\n  }\r\n \r\n  handleScan = data => {\r\n    if (data) {\r\n      this.setState({data:data})\r\n      this.setState({clicked:false})\r\n  }\r\n}\r\nhandleGenerateTxn = async(e)=>{\r\n        if(!this.state.tclicked){\r\n        e.preventDefault();\r\n        this.setState({finalTxn:null,tclicked:true,error:null});\r\n        var res = await fetch('/generateTxn',{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password:this.state.password,\r\n                amount:this.state.amount,\r\n                recipient:this.state.data,\r\n                receiver:this.state.receiver,\r\n                sendername:this.state.sendername\r\n            })\r\n        })\r\n        res = await res.json();\r\n        console.log(res)\r\n        if(res.auth=='failed'){\r\n            fetch('/auth/logout').then(res=>this.props.history.replace(\"/login\")).catch(err=>null)\r\n        }\r\n        if(!res.error) {\r\n            this.setState({txn:res,verified:true,error:'Transaction Generated!',tclicked:false})\r\n        }\r\n        else this.setState({error:res.error,tclicked:false})\r\n    }\r\n}\r\nSend = async()=>{\r\n    this.setState({error:null,sclicked:true})\r\n    var res = await fetch('/register-broadcast-transactions',{\r\n        method:'POST',\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify(this.state.txn)\r\n    })\r\n        res = await res.json();\r\n        if(!res.error) this.setState({finalTxn:res.sent,txn:null,sclicked:false})\r\n        else this.setState({finalTxn:res.error,txn:null,sclicked:false}) \r\n}\r\nrenderSendButton = ()=>{\r\n    if(this.state.finalTxn){\r\n        return <center><h4>{this.state.finalTxn}</h4></center>\r\n    }\r\n    if(this.state.verified){\r\n        if(this.state.sclicked){\r\n            return <center><CircularProgress /></center>\r\n        }\r\n        return (\r\n            <center>\r\n                <Button onClick={this.Send} variant=\"contained\" color=\"secondary\" >Send!</Button>\r\n            </center>\r\n        )\r\n    }\r\n}\r\nrenderButton = ()=>{\r\n    \r\n    if(this.state.tclicked){\r\n        return <center><CircularProgress /></center>\r\n    }\r\n    return (\r\n        <Button type=\"submit\" onSubmit = {this.handleGenerateTxn}>Generate Txn</Button>\r\n    )\r\n}\r\n\r\nrenderForm = ()=>{\r\n    if(!this.state.data && !this.state.clicked){\r\n        return (\r\n            \r\n            <center>\r\n                <div style={{mrginTop:20}}>\r\n                <h4 style={{marginTop:40}}>Paste the receiver's address below or Scan the QR Code</h4>\r\n                <div style={{marginTop:30,display:'flex',flexDirection:'column',width:'50%',height:150}}>\r\n                <form onSubmit={(e)=>{\r\n                    e.preventDefault();\r\n                    this.setState({data:this.state.recipient})\r\n            }}>\r\n                <TextField onChange={e=>this.setState({recipient:e.target.value})} type='text' placeholder=\"Receiver's address\"/>\r\n                <br/>\r\n                <Button type=\"submit\" onSubmit={(e)=>{\r\n                    e.preventDefault()\r\n                    this.setState({data:this.state.recipient})\r\n            }} style={{marginTop:20,width:100}} variant=\"contained\" color=\"primary\">Submit</Button>\r\n                </form>\r\n                </div>\r\n                </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\nrenderError =()=>{\r\n    return <center><h4 style={{marginTop:10}}>{this.state.error}</h4></center>\r\n}\r\nrenderReader = ()=>{\r\n    if(this.state.clicked){\r\n        return (\r\n            <div style={{display:'flex',height:200,justifyContent:'center',marginTop:30}}>\r\n                <QrReader\r\n          delay={300}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          style={{ width: 300}}\r\n        />\r\n            </div>\r\n         \r\n        )\r\n    }\r\n}\r\nrenderSubmit = ()=>{\r\n    if(this.state.data){\r\n        return (\r\n            <div style={{marginTop:20,display:'flex',justifyContent:\"center\",marginRight:20,marginLeft:20}}>\r\n                <center>\r\n                <Card >\r\n          <CardActionArea>\r\n              <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Generate Transaction\r\n              </Typography>\r\n              <Typography style={{wordBreak:\"break-word\"}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  \r\n                 <h5>Reciever</h5>: {this.state.data}\r\n              </Typography>\r\n              </CardContent>\r\n          </CardActionArea>\r\n          <CardActions >\r\n          <Typography style={{justifyContent:'center',display:'flex',flexDirection:'column',width:'100%'}} >\r\n            <form onSubmit={this.handleGenerateTxn} style={{display:'flex',flexDirection:'column',marginLeft:20,marginRight:20,justifyContent:'center'}} required autoComplete=\"off\" >\r\n            <TextField required onChange = {(e)=>this.setState({sendername:e.target.value})} type=\"text\" id=\"standard-basic\" label=\"Your name\" />\r\n              <TextField required onChange = {(e)=>this.setState({amount:e.target.value})} type=\"number\" id=\"standard-basic\" label=\"Amount\" />\r\n              <TextField required onChange = {(e)=>this.setState({receiver:e.target.value})} type=\"text\" id=\"standard-basic\" label=\"Receiver's name\" />\r\n              <TextField required onChange = {(e)=>this.setState({password:e.target.value})} type=\"password\" id=\"standard-basic\" label=\"Password\" />\r\n              <Typography style={{color:'red',marginTop:10}}>\r\n              \r\n            </Typography>\r\n              {this.renderButton()}\r\n              </form>\r\n            </Typography>\r\n            </CardActions>\r\n            \r\n          </Card>\r\n          </center>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nrenderScan = ()=>{\r\n    if(!this.state.data){\r\n        return(\r\n        <center>\r\n        <div style={{position:'fixed',bottom:0,marginBottom:100,right:0,left:0}}>\r\n        <Button  style={{marginTop:20}} onClick={()=>this.setState({clicked:this.state.clicked?false:true})} variant=\"contained\" color=\"secondary\" >Scan QR</Button>  \r\n        </div>\r\n        \r\n        </center>\r\n        )\r\n    }\r\n}\r\n  handleError = err => {\r\n    console.error(err)\r\n  }\r\n  render() {\r\n    return (\r\n      <div >\r\n        {this.renderForm()}\r\n        {this.renderScan()}\r\n        {this.renderSubmit()}\r\n        {this.renderError()}\r\n        {this.renderSendButton()}\r\n    \r\n        {this.renderReader()}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport BottomBar from \"./components/bootomBar\";\r\nimport Dashboard from \"./screens/dashboard\";\r\nimport Wallet from \"./screens/wallet\";\r\nimport Account from \"./screens/account\";\r\nimport Qr from \"./screens/qr\"\r\nclass App extends React.Component{\r\n  render(){\r\n    return (\r\n      <React.Fragment> \r\n        \r\n        <Route path=\"/dashboard\"  component = {Dashboard}/>\r\n        <Route path=\"/account\" component={Account} />\r\n        <Route path=\"/send\" component={Qr} />\r\n        <Route path=\"/wallet\" component={Wallet}/>\r\n        <div className =\"bottomBar\">\r\n          <BottomBar/>\r\n          \r\n         \r\n        </div>\r\n        \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nfunction Test(){\r\n  return (\r\n    <div>\r\n      <h1>\r\n        This is test\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\nexport default App;","import React,{Fragment} from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport {Route,withRouter,Switch} from \"react-router-dom\";\r\nimport Header from \"./components/header\"\r\nimport SignInScreen from \"./screens/signIn\";\r\nimport SignUpScreen from \"./screens/signUp\";\r\nimport ForgotPassword from \"./screens/forgotPassword\";\r\nimport ResetPassword from \"./screens/resetPassword\";\r\nimport VerifyEmail  from \"./screens/verifyEmail\";\r\nimport App from \"./App\"\r\nlet cookie = new Cookies();\r\n\r\nclass SwitchRouter extends React.Component{\r\n    state = {verification:false};\r\n    componentDidMount =()=>{\r\n        \r\n        if(!cookie.get('exp_session') && this.props.location.pathname!='/resetPassword' && this.props.location.pathname!='/auth/verify'){\r\n          return  this.props.history.replace(\"/login\")\r\n        }\r\n        \r\n        if(cookie.get('exp_session')){\r\n            fetch('/auth/checkAuth').then(res=>res.json()).then(res=>res['auth']=='failed'?this.props.history.replace(\"/login\"):this.props.history.replace(\"/dashboard\")).catch(err=>console.log(err));\r\n           \r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <Header />\r\n                <Switch >\r\n                <Route exact path=\"/auth/verify\" component = {VerifyEmail} />\r\n                <Route exact path=\"/resetPassword\" component={ResetPassword}/>\r\n                <Route exact path=\"/login\" render={(props)=><SignInScreen {...props} handleAuth= {(cookie)=>{}} />} /> \r\n                <Route exact path=\"/register\" component={SignUpScreen} />\r\n                <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\r\n                <App />\r\n                </Switch>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(SwitchRouter)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css';\r\nimport SwitchRouter from './switchRouter';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><SwitchRouter/></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}